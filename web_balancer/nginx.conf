# This is the largest number of concurrent connections we're testing so far.
events {worker_connections 25000;}

# The HTTP configuration.
# Docker has its own DNS system, which allows us to connect to containers by name.
http {
	# 300430storage_server#_1 is the name of the server container as assigned by Compose.
	# the bit after the colon is the port number, so TCP port 9000 will be used for PHP.

	# This bit is especially important: it's the links to all the backend servers.
	upstream setex {
		server 300430storage_server1_1:9000;
                server 300430storage_server2_1:9000;
                server 300430storage_server3_1:9000;
                server 300430storage_server4_1:9000;
	}
	
	server {
		# Use port 80 and use the "/web" folder for organisation's sake
		listen 80;
		root /web;

		location / {
			index index.php;
		}		

		# We need to load dynamic content, so we'll use the PHP:FPM container to run a hit counter.
		location ~* \.php$ {
			
			# This links the backend servers to the load balancer.. 
			fastcgi_pass setex; 

			# This is the name of the index page the backends will be using.
			fastcgi_index index.php;

			# This passes back both the filename and the path to the file, so it can be executed properly.
			include fastcgi_params;
			fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
			fastcgi_param PATH_INFO $fastcgi_path_info;
			# Mitigating httpoxy vulnerability.
			fastcgi_param HTTP_PROXY "";
		}
	}
}	


